# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['config_get']

# %% ../nbs/00_core.ipynb 3
import yaml
import os
import pathlib

# %% ../nbs/00_core.ipynb 4
def get_env(
        var:str, # The environment variable to get
        default:str = "default" # The default value to return if the environment variable is not set
    ):
    "Get a value from the environment variables."
    return os.environ.get(var, "default")


# %% ../nbs/00_core.ipynb 6
def config_get(
        value: str = None, # Name of value (None to read all values)
        py_config_active:str = None, # Name of configuration to read from. Defaults to the value of the R_CONFIG_ACTIVE environment variable ("default" if the variable does not exist).
        file:str = 'config.yaml', # Configuration file to read from (defaults to "config.yml"). If the file isn't found at the location specified then parent directories are searched for a file of the same name.
        encoding:str = 'utf-8'
    ):
    "Get a value from the `config.yaml` file.Read from the currently active configuration, retrieving either a single named value or all values as a list."
    if py_config_active is None:
        py_config_active = get_env('R_CONFIG_ACTIVE', 'default')
    
    dir_path = os.getcwd()
    file = pathlib.Path(dir_path, file)

    with open(file, 'r') as stream:
        conf = yaml.safe_load(stream)
    
    if value is None:
        return conf[py_config_active]
    else:
        return conf[py_config_active][value]

